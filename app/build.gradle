plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.appdistribution'
}

apply from: '../release.gradle'

def keystorePropertiesFile
try {
    keystorePropertiesFile = file('../keystore.properties', PathValidation.EXISTS)
} catch (InvalidUserDataException exception) {
    keystorePropertiesFile = null
}

def keystoreProperties = new Properties()
if (keystorePropertiesFile != null) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

ext.loadKeystoreProperty = { String key ->
    def localPropertyValue = keystoreProperties[key]
    def systemPropertyValue = System.getenv(key)
    return localPropertyValue != null ? localPropertyValue : systemPropertyValue
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.haystackreviews.bintray_circleci_test"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode sdkVersionCode()
        versionName "${sdkVersionName()}"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        uploadKeyConfig {
            def keystoreFile = new File("${project.rootDir}/.signing/release.jks")
            println keystoreFile
            println keystoreFile.absolutePath
            println keystoreFile.canonicalPath
            println keystoreFile.exists()
            if (keystoreFile.exists()) {
                storeFile keystoreFile
            }
            storePassword loadKeystoreProperty('STORE_PASSWORD')
            keyAlias loadKeystoreProperty('KEY_ALIAS')
            keyPassword loadKeystoreProperty('KEY_PASSWORD')
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            firebaseAppDistribution {
                serviceCredentialsFile="../google-services-account.json"
                groups="android-testers"
            }

            signingConfig signingConfigs.uploadKeyConfig
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    debugImplementation project(':mylibrary')

    releaseImplementation ("${sdkPackageName()}:${sdkRepoName()}:${sdkVersionName()}")

    implementation platform('com.google.firebase:firebase-bom:26.4.0')

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}